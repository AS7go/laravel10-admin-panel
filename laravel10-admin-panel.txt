Делал для себя Исключительно в образовательных целях - Претензии, критика и тд. не принимаются.
Мои Заметки по проекту, возможны неточности и ошибки !!! У меня все работает! Laravel v10.48.11 (PHP v8.2.19)

Использовал контейнеризацию ~/projects/laravel10-admin-panel$ 

docker-compose ps

NAME                COMMAND                  SERVICE             STATUS              PORTS
PHP1                "docker-php-entrypoi…"   webserver           running             0.0.0.0:8000->80/tcp, :::8000->80/tcp
mysql1              "docker-entrypoint.s…"   mysqldb             running             0.0.0.0:3306->3306/tcp, :::3306->3306/tcp, 33060/tcp
phpmyadmin1         "/docker-entrypoint.…"   phpmyadmin          running             0.0.0.0:8081->80/tcp, :::8081->80/tcp

docker -v
Docker version 26.1.2, build 211e74b

docker-compose -v
Docker Compose version v2.12.2

Файлы настроек, конфигурации (Dockerfile, docker-compose.yml)  описания laravel10-admin-panel.txt, база данных ale8.sql, 
ссылка на видео - первоисточник есть на гите

 lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 22.04.4 LTS
Release:	22.04
Codename:	jammy


=========================================================================================================
	Видео первоисточник канал - Grapes, за что огромное спасибо!
	#1 Разработка админ-панели на Laravel 8. План действий и настройка проекта
	https://www.youtube.com/watch?v=2pjzEDNugws&list=PLze7bMjv1CYvbu-0_zVt1-Rsl5aFgH-Ok&index=1
	https://github.com/VladislavGroniuk/Laravel-Admin-Panel-Course
	
=========================================================================================================

	=== Дополнительно - очистка от старых проектов Docker ===
	++++++++++++++++++++++++++++++++
		ЭФФЕКТИВНО УДАЛЯЕТ мусор от образов и образы, если забивается винт и кэш
	 
		посмотреть статистику
	docker system df

		1.Очистка неиспользуемых образов:
	docker image prune -a

		2.Очистка неиспользуемых контейнеров:
	docker container prune

		3.Очистка неиспользуемых томов (локальных томов данных):
	docker volume prune

		4.Очистка кэша сборки:
	docker builder prune

		посмотреть статистику
	docker system df
===================================================================
===================================================================
cd projects/laravel10-admin-panel/
cd projects/laravel10-admin-panel/laravel10/
============ laravel10-admin-panel ================================

структура папок и файлов

├── laravel10-admin-panel (работа с контейнером [docker-compose up -d] и гитом [git add .] )
│   (~/projects/laravel10-admin-panel$ )
│   ├── Dockerfile
│   ├── docker-compose.yml
│   ├── (вспомогательные файлы, Readme, ...)
......
│   └── laravel10 (в этом каталоге работа с проектом [php artisan ... ])
│       (~/projects/laravel10-admin-panel/laravel10$ )
│       └── (файлы проекта)


1.
mkdir laravel10-admin-panel

2.
cd laravel10/

3.
composer create-project laravel/laravel:^10 laravel10

4. Работа с git hub и docker-compose в папке laravel10-admin-panel$
	~/projects/laravel10-admin-panel$
cd laravel10/

5. Работа с проектом в папке /laravel10$
	~/projects/laravel10-admin-panel/laravel10$ 
php artisan serve

   INFO  Server running on [http://127.0.0.1:8000].  

  Press Ctrl+C to stop the server

  2024-05-10 11:57:08 .................................................................................... ~ 0s
6. 
	выход
Ctrl+C

7. Хост нужен для миграций и тд, иначе выдаст ошибку, что не нашло базу данных

	Вводим в терминале команду hostname получаем свой хост (у меня это E7240) 
/laravel10$ hostname
E7240
    
    1) варианты для миграции в .env
# DB_HOST=mysqldb
DB_HOST=E7240

    2) Что бы не переключать в .env для миграций и т.д. можно сделать так 
ПРИМЕР команд    
DB_HOST=E7240 php artisan migrate
DB_HOST=E7240 php artisan db:seed --class=CreateSuperUserSeeder
DB_HOST=E7240 php artisan db:seed --class=PermissionsSeeder
DB_HOST=E7240 php artisan permission:create-role user

ПРИМЕР команд, которые вводятся без указания DB_HOST=E7240
php artisan storage:link 
php artisan breeze:install

php artisan optimize:clear
php artisan config:clear

php artisan make:seeder CreateSuperUserSeeder
php artisan make:controller PostController
php artisan permission:create-role user
php artisan make:controller RoleController --resource --model=Role
php artisan make:seeder PermissionsSeeder
php artisan make:controller UserController --resource --model=User


--------------
в настройках .env вводим данные по базе с файла docker-compose.yml
--- .env
DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
DB_HOST=mysqldb # <- контейнер с БД(База Данных)
# DB_HOST=E7240 # <-это для запуска миграций в контейнере, E7240-хост компьютера 
DB_PORT=3306
DB_DATABASE=ale8
DB_USERNAME=root
DB_PASSWORD=secret

8.
создаем файл laravel.log
в папке laravel10/storage/logs/laravel.log

9.
	возврат в с подкаталога в каталог командой (cd ..)
~/projects/laravel10-admin-panel/laravel10$ cd ..
~/projects/laravel10-admin-panel$ 
---

Закомментированные строки для наглядности возможных, иногда неправильных вариантов реализации
В каталоге ~/projects/laravel10-admin-panel/
Создаем файлы --- docker-compose.yml и Dockerfile

--- строки комментируем, иначе ошибка с БД на этапе создания контейнера с БД
      # MYSQL_USER: root 
  	  # MYSQL_PASSWORD: secret 

--- Файл docker-compose.yml
version: '3.8'
# version: '3.9'
services:
  webserver:
    container_name: PHP1
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./laravel10:/var/www/html
    ports:
      - 8000:80
    depends_on:
      - mysqldb

  mysqldb:
    container_name: mysql1
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: ale8
      # MYSQL_USER: root
      # MYSQL_PASSWORD: secret
    volumes:
      - ./laravel10/mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    container_name: phpmyadmin1
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysqldb
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysqldb
      MYSQL_ROOT_PASSWORD: secret


--- Файл Dockerfile

# Использовать официальный образ PHP с предустановленным Apache
FROM php:8.2-apache

# Обновление пакетного менеджера и установка MySQL клиента
RUN apt-get update && apt-get install -y default-mysql-client

# Установить PDO и PDO MySQL расширения PHP
RUN docker-php-ext-install pdo pdo_mysql \
    && docker-php-ext-enable pdo_mysql

# Включить модули Apache
RUN a2enmod rewrite

# Установить рабочий каталог в /var/www/html
WORKDIR /var/www/html

# Скопировать каталог вашего проекта Laravel 
# если Dockerfile и docker-compose.yml в каталоге laravel10, то
# COPY ../laravel10 . 

# Скопировать каталог вашего проекта Laravel  
# если Dockerfile, docker-compose.yml и laravel10 в одном общем каталоге, то  
COPY ./laravel10 /var/www/html

# Установить Composer (если еще не установлен)
# RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Установить зависимости проекта 
# На локальном установит и перенесет в контейнер
# RUN composer install  

# Настроить разрешения для каталогов storage и bootstrap/cache
# RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# Открыть порт (при необходимости изменить)
EXPOSE 80

# Использовать Apache в качестве точки входа по умолчанию
CMD ["apache2-foreground"]


10.
	переход в подкаталог с именем (laravel10) командой (cd laravel10/)
~/projects/laravel10-admin-panel$ cd laravel10/
~/projects/laravel10-admin-panel/laravel10$ 
---

		Даем разрешения и права доступа на папки и файлы рекурсивно
	sudo chmod 777 -R storage/
		на запрос - вводим пароль
	sudo chmod 777 -R bootstrap/cache

	или одной командой 
sudo chmod -R 777 storage bootstrap/cache

---

	права владельца и группы www-data:www-data рекомендуются для контейнера
	!!! запустил без -> sudo chown -R www-data:www-data storage bootstrap/cache
 
11. 
--- +++ 
	командой создаем и запускаем контейнеры в фоновом режиме -d 
docker-compose up --build -d

		дополнительно - обычный запуск 
	docker-compose up -d
		останов
	docker-compose down
---

12. 
	Даем права доступа папке mysql-data и файлам по пути laravel10/mysql-data
sudo chmod -R 777 mysql-data

15.
------------------------------------------------
	После запуска контейнера доступ к сайту по адресу
http://localhost:8000/public/	
	будет работать,	а для настройки адреса
http://localhost:8000
	нужно создаем файл .htaccess в ~/projects/laravel10-admin-panel/laravel10/
-----
# run laravel/public/index.php

<IfModule mod_rewrite.c>
    Options -MultiViews
    RewriteEngine On
    RewriteCond %{REQUEST_URL} !^/public/
    RewriteRule ^(.*)$ /public/$1 [L,QSA]
</IfModule>

# run laravel/index.php

# RewriteEngine On
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d
# RewriteRule ^(.*)$ index.php [QSA,L]
	
-------------------------------------------
===============================================================================================================
!!! ЭТО ДЕЛАТЬ НЕ ОБЯЗАТЕЛЬНО
если нужно проверить создание таблицы, подключение, запись и чтение БД
меняем файл в папке laravel10/.htaccess так
---

# run laravel/public/index.php

# <IfModule mod_rewrite.c>
#     Options -MultiViews
#     RewriteEngine On
#     RewriteCond %{REQUEST_URL} !^/public/
#     RewriteRule ^(.*)$ /public/$1 [L,QSA]
# </IfModule>

# run laravel/index.php

RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [QSA,L]

--- 

это позволит запускать index.php с корня laravel10 по 
http://localhost:8000

создаем файл index.php в корне laravel10 
laravel10/index.php

=== Файл index.php !!! только для проверки связи создания записи удаления таблицы в БД ===++++++++++++++++++++
--- После тестирования удаляем таблицу из БД пунктом меню - Удалить таблицу или SQL запросом ниже

<?php
// Этот файл для теста связи с базой данных, записи и чтения !!! создаст таблицу testuser
// SQL запрос на полное удаление таблицы 'testuser' с базы данных 'ale8'
// DROP TABLE `ale8`.`testuser`;
// Заход в БД http://localhost:8081
// Пользователь: root
// Пароль: secret

$host = 'mysqldb'; // Используем имя сервиса контейнера MySQL из docker-compose.yml
$db = 'ale8'; // Указываем имя базы данных
$user = 'root';
$pass = 'secret';
$table = 'testuser';

echo "!!! Проверка-тест связи с Базой Данных (http://localhost:8081)<br>Пользователь: root <br> Пароль: secret<br>";
echo 'Ссылка на БД в контейнере Docker -> <a href="http://localhost:8081">phpMyAdmin</a><br><br>';
echo "Если нет ошибки, то есть соединение с БД -> $db<br>";

try {
    $pdo = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo 'Ошибка соединения с БД ' . $e->getMessage();
    die();
}

// Запрос для создания таблицы и заполнение
$queryCreateTable = "
SET NAMES utf8;
SET time_zone = '+02:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

SET NAMES utf8mb4;

CREATE TABLE IF NOT EXISTS `$table` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `flag` int DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO `$table` (`name`, `email`, `flag`) VALUES
('name1', 'name1@gmail.com', 1),
('name2', 'name2@gmail.com', 1),
('name3', 'name3@gmail.com', 1);
";

// Функция для выполнения запроса
function executeQuery($pdo, $query, $successMessage) {
    try {
        $pdo->exec($query);
        echo $successMessage;
    } catch (PDOException $e) {
        echo 'Ошибка при выполнении запроса: ' . $e->getMessage();
    }
}

// Создание таблицы
echo '<a href="?action=create_table">Создать тестовую таблицу, заполнить, показать данные</a><br>';

// Показать содержимое таблицы
echo '<a href="?action=show_table">Показать содержимое таблицы</a><br>';

// Удаление таблицы
echo '<a href="?action=delete_table">Удалить таблицу</a><br>';

// Обработка действий
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'create_table':
            executeQuery($pdo, $queryCreateTable, "<br>Таблица -> $table успешно создана и заполнена данными.<br><br>");
            // break; //закомментировано<-что бы сразу создать и показывать, но показывать - можно вызывать отдельно, от создать
        case 'show_table':   
            $queryShowTable = "SELECT id, name, email FROM $table";
            $stmt = $pdo->query($queryShowTable);
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                echo $row['name'] . ' - ' . $row['email'] . '<br>';
            }
            break;
        case 'delete_table':
            $queryDeleteTable = "DROP TABLE `$table`";
            executeQuery($pdo, $queryDeleteTable, "Таблица -> $table успешно удалена.<br>");
            break;
        default:
            echo 'Неверное действие';
    }

}
?>

==============================+++++++++++++++

----- SQL запрос на полное удаление таблицы testuser с базы данных ale8
DROP TABLE `ale8`.`testuser`;
-----

после проверки подключения к БД(база данных)
не забыть поменять файл laravel10/.htaccess как было изначально с перенаправлением на 
# run laravel/public/index.php

<IfModule mod_rewrite.c>
    Options -MultiViews
    RewriteEngine On
    RewriteCond %{REQUEST_URL} !^/public/
    RewriteRule ^(.*)$ /public/$1 [L,QSA]
</IfModule>

# run laravel/index.php

# RewriteEngine On
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d
# RewriteRule ^(.*)$ index.php [QSA,L]

===============================================================================================================
-------------------------------------------

16.
	создать символическую ссылку из каталога public/storage на каталог storage/app/public для доступа к файлам, сохраненным в каталоге storage/app/public, через веб-браузер.
php artisan storage:link 

Зачем это нужно?
Для Доступа к файлам через HTTP: 
Без создания этой символической ссылки, файлы, хранящиеся в storage/app/public, не будут доступны напрямую через HTTP. 
Создание ссылки позволяет вам обращаться к файлам через URL-адрес вида http://yourdomain.com/storage/yourfile.jpg.


17. !!!этот пункт в этом проекте не делал
  	Для локального компьютера с используете Laravel и Apache, рекомендуется установить разрешения для каталогов mysql-data, storage и bootstrap/cache
  	мы сделали так (aleksandr:www-data) второй вариант пока не используем !!!(www-data:www-data)
  sudo chown -R aleksandr:www-data mysql-data
  sudo chown -R aleksandr:www-data storage
  sudo chown -R aleksandr:www-data bootstrap/cache
  	а в Dockerfile задаем так
  RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache
  
  	получить данные о владельце, группе командой: ls -l имя_файла_каталога
  	пример в контейнере
  root@168b9521c58b:/var/www/html# ls -l storage
  total 12
  drwxrwxrwx 3 1000 www-data 4096 Jan 31  2023 app
  drwxrwxrwx 6 1000 www-data 4096 Jan 31  2023 framework
  drwxrwxrwx 2 1000 www-data 4096 May 10 09:08 logs
  
  	пример на локальном
  ~/projects/laravel10-admin-panel/laravel10$ ls -l storage
  итого 12
  drwxrwxrwx 3 aleksandr www-data 4096 янв 31  2023 app
  drwxrwxrwx 6 aleksandr www-data 4096 янв 31  2023 framework
  drwxrwxrwx 2 aleksandr www-data 4096 мая 10 12:08 logs

18. Вход в контейнер, если понадобится +++

PHP1-имя контейнера. Есть в самом начале. Узнать можно командой ->  docker-compose ps

docker exec -it PHP1 bash
	установка файл-менеджера(для просмотра файлов) в контейнер, не обязательно
root@e02504415425:/var/www/html# apt install mc
	запуск менеджера файлов
mc 

19. Работа с https://github.com
cd ..
Все с гитом делаем в каталоге ~/projects/laravel10-admin-panel$
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
=======================================================================
ВАРИАНТ 1, (ВАРИАНТ 2 оптимизирован)

	подключение git
	/projects/laravel10-admin-panel$ 
git init
git status
	Текущая ветка: master
	переименовать master в main
git branch -m master main
git status
	выдаст Текущая ветка: main
	
	вводим свои настройки
git config user.email "sh17aleksandr@gmail.com"
git config user.name "Aleksandr" 

	в laravel10/.gitignore 
	добавляем папку 
/mysql-data
	
git add .
git commit -m '1'


+++ создаем репозиторий на гите laravel10-admin-panel
	запускаем это 
git remote add origin git@github.com:AS7go/laravel10-admin-panel.git
git branch -M main
git push -u origin main

=============================================
+++ ВАРИАНТ 2 ОПТИМИЗИРОВАН
=============================================

# Инициализация Git в проекте
git init

# Переименование ветки master в main (если необходимо)
git branch -m master main

# !!! ВАШИ ДАННЫЕ Настройка пользователя Git
git config user.email "sh17aleksandr@gmail.com"
git config user.name "Aleksandr"

# Добавление исключения для mysql-data в .gitignore
echo "/mysql-data" >> .gitignore

# Добавление всех файлов в индекс и создание первого коммита
git add .
git commit -m 'Initial commit'

# Создание репозитория на GitHub и добавление удаленного репозитория
git remote add origin git@github.com:AS7go/laravel10-admin-panel.git

# Отправка изменений в удаленный репозиторий
git push -u origin main

------------------------------------------------------
=======================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
20.
php artisan make:model Post -m

   INFO  Model [app/Models/Post.php] created successfully.  
   INFO  Migration [database/migrations/2024_05_21_225341_create_posts_table.php] created successfully.

21.
php artisan make:model Category -m

   INFO  Model [app/Models/Category.php] created successfully.  
   INFO  Migration [database/migrations/2024_05_21_225349_create_categories_table.php] created successfully.  

22.
Аутентификация Authentication
https://laravel.com/docs/10.x/fortify#main-content

composer require laravel/fortify

php artisan vendor:publish --provider="Laravel\Fortify\FortifyServiceProvider"

	!!! ТАК КАК используем DOCKER, то возможны такие ошибки
php artisan migrate
	выдаст ошибку
---
   Illuminate\Database\QueryException 

  SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysqldb failed: Temporary failure in name resolution (Connection: mysql, SQL: select table_name as `name`, (data_length + index_length) as `size`, table_comment as `comment`, engine as `engine`, table_collation as `collation` from information_schema.tables where table_schema = 'ale8' and table_type in ('BASE TABLE', 'SYSTEM VERSIONED') order by table_name)
---
	+++ В путкте 7. объяснение причина
	+++ делаем так 
DB_HOST=E7240 php artisan migrate
	
	выдаст
   INFO  Preparing database.  

  Creating migration table ......................................... 64ms DONE

   INFO  Running migrations.  

  2014_10_12_000000_create_users_table ............................ 129ms DONE
  2014_10_12_100000_create_password_reset_tokens_table ............. 65ms DONE
  2014_10_12_200000_add_two_factor_columns_to_users_table ......... 119ms DONE
  2019_08_19_000000_create_failed_jobs_table ...................... 222ms DONE
  2019_12_14_000001_create_personal_access_tokens_table ........... 174ms DONE
  2024_05_21_225341_create_posts_table ............................. 67ms DONE
  2024_05_21_225349_create_categories_table ........................ 67ms DONE

23.
	Посмотреть в базе данных так

http://localhost:8081/
Пользователь: root
Пароль: secret

24.
Установить laravel ui https://github.com/laravel/ui

composer require laravel/ui

php artisan ui bootstrap --auth
	выбрать yes

25. РЕЗУЛЬТАТЫ ВЫПОЛНЕНИЯ КОМАНД В ПУНКТЕ (24.) ПОВТОРНО НЕ НАБИРАТЬ 
----------------------------------
aleksandr@E7240:~/projects/laravel10-admin-panel/laravel10$ composer require laravel/ui
Deprecation Notice: Using ${var} in strings is deprecated, use {$var} instead in /usr/share/php/Symfony/Component/Console/Command/DumpCompletionCommand.php:48
Deprecation Notice: Using ${var} in strings is deprecated, use {$var} instead in /usr/share/php/Symfony/Component/Console/Command/DumpCompletionCommand.php:56
Deprecation Notice: Using ${var} in strings is deprecated, use {$var} instead in /usr/share/php/Composer/Autoload/AutoloadGenerator.php:879
Deprecation Notice: Using ${var} in strings is deprecated, use {$var} instead in /usr/share/php/Composer/Autoload/AutoloadGenerator.php:884
Using version ^4.5 for laravel/ui
./composer.json has been updated
Running composer update laravel/ui
Loading composer repositories with package information
Updating dependencies
Lock file operations: 1 install, 0 updates, 0 removals
  - Locking laravel/ui (v4.5.2)
Writing lock file
Installing dependencies from lock file (including require-dev)
Package operations: 1 install, 0 updates, 0 removals
  - Downloading laravel/ui (v4.5.2)
  - Installing laravel/ui (v4.5.2): Extracting archive
Generating optimized autoload files
> Illuminate\Foundation\ComposerScripts::postAutoloadDump
> @php artisan package:discover --ansi

   INFO  Discovering packages.  

  laravel/fortify ....................................................... DONE
  laravel/sail .......................................................... DONE
  laravel/sanctum ....................................................... DONE
  laravel/tinker ........................................................ DONE
  laravel/ui ............................................................ DONE
  nesbot/carbon ......................................................... DONE
  nunomaduro/collision .................................................. DONE
  nunomaduro/termwind ................................................... DONE
  spatie/laravel-ignition ............................................... DONE

84 packages you are using are looking for funding.
Use the `composer fund` command to find out more!
> @php artisan vendor:publish --tag=laravel-assets --ansi --force

   INFO  No publishable resources for tag [laravel-assets].  

aleksandr@E7240:~/projects/laravel10-admin-panel/laravel10$ php artisan ui bootstrap --auth

  The [Controller.php] file already exists. Do you want to replace it? (yes/no) [yes]
❯ yes

   INFO  Authentication scaffolding generated successfully.  

   INFO  Bootstrap scaffolding installed successfully.  

   WARN  Please run [npm install && npm run dev] to compile your fresh scaffolding.  
   
----------------------------------

26.
	Продолженеи установки по документации

npm install

	или npm run prod — Используется для продакшна, оптимизирует производительность.
!!! npm run prod 
	
	или npm run dev - Используется для разработки, облегчает отладку.
	
npm run dev

	после этого вход по Log in или Register будет со стилями
	
	
=========================================================================================
27.  
	Spatie LARAVEL-PERMISSION
	https://spatie.be/docs/laravel-permission/v6/introduction

	https://spatie.be/docs/laravel-permission/v6/installation-laravel

composer require spatie/laravel-permission
---

Optional: The service provider will automatically get registered. Or you may manually add the service provider in your config/app.php file:

'providers' => [
    // ...
    Spatie\Permission\PermissionServiceProvider::class,
];

--- config/app.php Можем поменять timezone на свою (иначе время создания таблиц будет отличаться от реального)
 // 'timezone' => 'UTC',
    'timezone' => 'Europe/Kiev',

---
php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"

---
php artisan optimize:clear
	# or
php artisan config:clear

---
	(В моей конфигурации команда php artisan migrate запускается с моим хостом DB_HOST=E7240 объяснение в пункте (7.))
DB_HOST=E7240 php artisan migrate
	выдаст
  INFO  Running migrations.  

  2014_10_12_100000_create_password_resets_table ........................................... 120ms DONE
  2024_05_22_032032_create_permission_tables ............................................. 1,274ms DONE

---
Add the necessary trait to your User model:

 // The User model requires this trait
 use HasRoles;
--
Получилось так в laravel10/app/Models/User.php

use Spatie\Permission\Traits\HasRoles;

use HasApiTokens, HasFactory, Notifiable, HasRoles;

28.
По документации создаем роль user
	https://spatie.be/docs/laravel-permission/v6/basic-usage/artisan

DB_HOST=E7240 php artisan permission:create-role user
	выдаст
	Role `user` created

DB_HOST=E7240 php artisan permission:create-role admin
	выдаст
	Role `admin` created
В базе данных roles появятся
--- roles --------------------------------------------------------------------------------------------------------------------------
| id  | name  | guard_name | created_at          | updated_at          | Actions           |
|-----|-------|------------|---------------------|---------------------|-----------------------------------------------------------|
| 1   | user  | web        | 2024-05-22 03:39:58 | 2024-05-22 03:39:58 | [Изменить](#) [Копировать](#) [Удалить](#)                |
| 2   | admin | web        | 2024-05-22 03:41:49 | 2024-05-22 03:41:49 | [Изменить](#) [Копировать](#) [Удалить](#)                |
------------------------------------------------------------------------------------------------------------------------------------

29.
	!!! Без этой команды (npm run build) меню будет работать только при запущенном (npm run dev)
	запускаем
npm run build
	после этого добавится laravel10/public/build  

30.

Создаем пользователя в Register (меню Log in Register)

test
test1@gmail.com
12345678
12345678

проверяем заходим в Log in

удаляем пользователя

31.
--- присваиваем роль
	https://spatie.be/docs/laravel-permission/v6/basic-usage/role-permissions
$user->assignRole('writer');

--- Создаем роль по умолчанию при регистрации пользователя
    protected function create(array $data)
    {
        $user = User::create([
            'name' => $data['name'],
            'email' => $data['email'],
            'password' => Hash::make($data['password']),
        ]);
        $user->assignRole('user');
        return $user;
    }

32.
В таблице model_has_roles добавилась роль при регистрации 
test
test1@gmail.com
12345678 

---- model_has_roles -------------------
| role_id | model_type      | model_id | поле model_id это соответствие таблице users с таким же id
| 1       | App\Models\User | 2        |
| 1 -> 2  | App\Models\User | 3        | присваиваем role_id=>2(admin из табл roles) соответствует model_id=3(Admin из табл users)
----------------------------------------
Можно переприсвоить 1 -> 2 sql-запросом
UPDATE `model_has_roles` SET `role_id` = '2' WHERE `model_has_roles`.`role_id` = 1 AND `model_has_roles`.`model_type` = 'App\\Models\\User' AND `model_has_roles`.`model_id` = 3;


--- roles --------------------------------------------------------------------------------------------------------------------------
| id  | name  | guard_name | created_at          | updated_at          | Actions           |
|-----|-------|------------|---------------------|---------------------|-----------------------------------------------------------|
| 1   | user  | web        | 2024-05-22 03:39:58 | 2024-05-22 03:39:58 | [Изменить](#) [Копировать](#) [Удалить](#)                |
| 2   | admin | web        | 2024-05-22 03:41:49 | 2024-05-22 03:41:49 | [Изменить](#) [Копировать](#) [Удалить](#)                |
------------------------------------------------------------------------------------------------------------------------------------

--- users ---------------------------------------------------------------------------------------------------------------
| id | name  | email           | email_verified_at |password             | | |...
| 2  | test1 | test1@gmail.com | NULL              |$2y$12$aZ65PJVgYYE1hc8gergj/O.okIGBTmXlVq8/PR6/FiDNWbc/yeNXm |
| 3  | Admin | admin@gmail.com | NULL              |$2y$12$UJ4zELfnhtHFzxy0N04T3.WB5PjfYzoBBzxdyCPFA1aI/CoS4T.jK |
-------------------------------------------------------------------------------------------------------------------------


model_has_roles -> model_id = 2  
users           -> id       = 2

model_has_roles -> role_id = 1
roles           -> id      = 1(user)

Admin
admin@gmail.com
12345678

users id=3(Admin) = model_id(3) которая соотв role_id(2) = roles(2)(admin) 

таблица users пользователь Admin(id=3) соответствует 3=model_id таблицы model_has_roles, в которой role_id=2.
role_id=2 соотв таблице roles с id=2. В строке 2 роль = admin 

т.е. есть промежуточная таблица, которая связывает Пользователя по id с id роли

---- model_has_roles ---------------------
| role_id   | model_type      | model_id | 
| 1         | App\Models\User | 2        |
| 2(admin)  | App\Models\User | 3(Admin) | 
--табл role--------------------табл users-

33. 
Создаем файл laravel10/resources/views/test.blade.php (с содержимым <h2>test</h2>)

--- laravel10/routes/web.php
	делаем доступной только для админа ['role:admin'] по документации
	https://spatie.be/docs/laravel-permission/v6/basic-usage/middleware

Route::group(['middleware' => ['role:admin']], function () {
    Route::get('/test', function () {
        return view('test');
    });
});

34.
Часть настройки Spatie, Внимательно с Laravel 9, 10 и 11 разные блоки вставки

In Laravel 9 and 10 you can add them in app/Http/Kernel.php:

!!! // Laravel 9 uses $routeMiddleware = [   <--- у кого Laravel 9 добавлять сюда $routeMiddleware =...
	//protected $routeMiddleware = [
!!! // Laravel 10+ uses $middlewareAliases = [ <--- в проекте используется Laravel v10.48.11 (PHP v8.2.19)
protected $middlewareAliases = [
    // ...
    'role' => \Spatie\Permission\Middleware\RoleMiddleware::class,
    'permission' => \Spatie\Permission\Middleware\PermissionMiddleware::class,
    'role_or_permission' => \Spatie\Permission\Middleware\RoleOrPermissionMiddleware::class,
];
---

Добавляем в laravel10/routes/web.php строку
use Illuminate\Support\Facades\Auth;

что бы не было ошибки Undefined type 'Auth'.intelephense(P1009) 

---
35. Распределили роли (доступ к странице дан только админу), проверяем
Если заходим, как админ 
admin@gmail.com
12345678

то http://localhost:8000/test 
есть доступ

если не заходим или заходим как
test1@gmail.com
12345678

то http://localhost:8000/test  НЕ работает 
и выдает 403 USER DOES NOT HAVE THE RIGHT ROLES.

36.
Бесплатный шаблон для админки AdminLTE
https://adminlte.io
https://github.com/ColorlibHQ/AdminLTE/releases
открываем Assets там ссылки на скачивание или
https://github.com/ColorlibHQ/AdminLTE/archive/refs/tags/v3.1.0.zip

качаем Source code(zip)

37.

создаем файл admin_layout.blade.php (laravel10/resources/views/layouts/admin_layout.blade.php)
с файла AdminLTE-3.1.0/index.html
копируем в файл laravel10/resources/views/layouts/admin_layout.blade.php
---

в файле laravel10/resources/views/layouts/admin_layout.blade.php
Заменяем пути href="plugins/ на href="/admin/plugins/

href="dist заменяем на href="/admin/dist

src="plugins заменяем на src="/admin/plugins

src="dist -> src="/admin/dist

38.
	копируем папки 
AdminLTE-3.1.0/dist
AdminLTE-3.1.0/plugins
	создаем каталог admin - laravel10/public/admin копируем в него что бы было так 
laravel10/public/admin/dist
laravel10/public/admin/plugins

39.
создаем папку Admin в laravel10/app/Http/Controllers/
laravel10/app/Http/Controllers/Admin/HomeController.php
	Создаем контроллер
php artisan make:controller Admin/HomeController


..........

40.

https://laravel.com/docs/10.x/routing#route-group-prefixes

41.
Вход http://localhost:8000
под Admin
admin@gmail.com
12345678 
и
http://localhost:8000/admin_panel
Проверить права доступа, без разрешения не подхватывает стили, возможно это только у меня в настройках (Ubuntu 22.04.4 LTS, Docker)
sudo chmod -R 775 public/

42.
laravel10/app/Http/Controllers/Admin/HomeController.php
    // $posts_count = Post::all()->count();
        $posts_count = Post::count();

При добавлении на гит возникает предупреждение
	warning: CRLF will be replaced by LF

Предупреждение означает
CRLF и LF — это символы окончания строки. CRLF (возврат каретки и перевод строки) используется в Windows, тогда как LF (только перевод строки) используется в Unix-подобных системах (например, Linux и macOS).
"CRLF will be replaced by LF" — это предупреждение говорит вам, что строки с окончанием CRLF будут заменены на LF при добавлении в Git. Однако в вашем рабочем каталоге (working directory) они останутся с CRLF.

Итого в проекте есть файлы с окончанием строки CRLF (Carriage Return Line Feed), которые будут заменены на LF (Line Feed) при добавлении в Git. 
Git автоматически выполняет эту замену в зависимости от вашей конфигурации.


43.
laravel10/resources/views/layouts/admin_layout.blade.php

<a href="#" class="d-block">{{Auth::user()->name}}</a>

HTML-тег <a>:

Создает гиперссылку. Атрибут href="#" указывает, что ссылка ведет на текущую страницу. Атрибут class="d-block" задает CSS-класс d-block, который в Bootstrap делает элемент блочным.
Blade-шаблонные директивы {{ ... }}:

Внутри двойных фигурных скобок {{ ... }} Laravel выполняет PHP-код и выводит результат в шаблон.
Auth::user() в Laravel:

Метод Auth::user() возвращает экземпляр текущего аутентифицированного пользователя. Laravel использует фасад Auth для работы с аутентификацией.
Если пользователь не аутентифицирован, Auth::user() вернет null.
Auth::user()->name:

Auth::user()->name обращается к свойству name текущего аутентифицированного пользователя.
Предполагается, что у модели пользователя (обычно это класс App\Models\User или аналогичный) есть свойство name, которое содержит имя пользователя.
Попытка обратиться к Auth::user()->name вызовет ошибку.

Чтобы избежать ошибок при отсутствии аутентифицированного пользователя, можно добавить проверку:

@if (Auth::check())
    <a href="#" class="d-block">{{ Auth::user()->name }}</a>
@else
    <a href="{{ route('login') }}" class="d-block">Login</a>
@endif

44.
добавили скрипт для меню admin.js
laravel10/public/admin/admin.js

$(document).ready(function () {
    $(".nav-treeview .nav-link, .nav-link").each(function () {
        var location2 = window.location.protocol + '//' + window.location.host + window.location.pathname;
        var link = this.href;
        if(link == location2){
            $(this).addClass('active');
            $(this).parent().parent().parent().addClass('menu-is-opening menu-open');

        }
    });

    $('.delete-btn').click(function () {
        var res = confirm('Подтвердите действия');
        if(!res){
            return false;
        }
    });
})

Этот скрипт:

Добавляет класс active для текущей активной ссылки в навигации и развертывает родительские элементы меню.
Добавляет подтверждение для кнопок удаления, чтобы предотвратить случайное удаление, требуя от пользователя подтвердить действие.


45.
laravel10/resources/views/layouts/admin_layout.blade.php

меняем маршрут с 
 {{-- <a href="pages/widgets.html" class="nav-link"> --}}
 на
<a href="{{route('homeAdmin')}}" class="nav-link">

подключаем скрипт
<script src="/admin/admin.js"></script>

46.
создаем ресурсный контроллер с методами ниже

php artisan make:controller Admin/CategoryController --resource --model=Category

   INFO  Controller [app/Http/Controllers/Admin/CategoryController.php] created successfully. 

    index() - отображает список ресурсов
    create() - отображает форму создания нового ресурса
    store(Request $request) - сохраняет новый ресурс
    show($id) - отображает конкретный ресурс по его идентификатору
    edit($id) - отображает форму редактирования конкретного ресурса
    update(Request $request, $id) - обновляет конкретный ресурс
    destroy($id) - удаляет конкретный ресурс

47.
laravel10/resources/views/layouts/admin_layout.blade.php

    {{-- <a href="./index.html" class="nav-link"> --}}
  <a href="{{route('category.index')}}" class="nav-link">

---
laravel10/routes/web.php

Route::middleware(['role:admin'])->prefix('admin_panel')->group(function () {
    Route::get('/', [HomeController::class, 'index'])->name('homeAdmin');

    Route::resource('category', CategoryController::class);
});

48.
Заходд в проект и запуск docker после перезагрузки компьютера
cd projects/laravel10-admin-panel/laravel10/
cd projects/laravel10-admin-panel/

docker-compose up -d

49. 
форма без валидации - упрощенный вариант
Валидацию можно сделать отдельно


50.

короткое описание
 
<form action="{{route('category.store')}}" method="POST">
@csrf 

В коде @csrf используется для защиты от CSRF (Cross-Site Request Forgery), также известного как межсайтовая подделка запроса.

{{route('category.store')}} вызывает метод store в контроллере CategoryController.php, 
который определен маршрутом Route::resource('category', CategoryController::class);

method="POST" - метод для определения того, как данные будут отправлены на сервер (методы GET POST PUT/PATCH DELETE).

В CategoryController.php есть методы index edit update ... Обращаться так -> ({{route('category.index')}}, {{route('category.edit')}}, {{route('category.update')}})
и соответственно прописать в /routes/web.php 

https://laravel.com/docs/10.x/controllers#restful-partial-resource-routes


51.
laravel10/resources/views/layouts/admin_layout.blade.php
Удалить - пергрузка меню с ярлыком по центру 
<div class="preloader flex-column justify-content-center align-items-center" style="height: 0px;">
	<img class="animation__shake" src="/admin/dist/img/AdminLTELogo.png" alt="AdminLTELogo" height="60" width="60" style="display: none;">
</div>

---
Добавили delete-btn со скрипта для вывода окна подтверждения удаления  <a class="btn btn-danger btn-sm delete-btn" href="#">
laravel10/resources/views/admin/category/index.blade.php

52.
laravel10/resources/views/admin/category/index.blade.php

<form action="{{route('category.destroy', $category->id)}}" method="POST" style="display: inline-block"> 
    @csrf
    @method('DELETE')
    <button type="submit" class="btn btn-danger btn-sm delete-btn">
        <i class="fas fa-trash">
        </i>
        Delete
    </button>
</form>

style="display: inline-block" - кнопки в строку

53.

php artisan make:controller Admin/PostController --resource --model=Post 

   INFO  Controller [app/Http/Controllers/Admin/PostController.php] created successfully.  

54. 

структура папок и файлов

├── laravel10-admin-panel (работа с контейнером [docker-compose up -d] и гитом [git add .] )
│   (~/projects/laravel10-admin-panel$ )
│   ├── Dockerfile
│   ├── docker-compose.yml
│   ├── (вспомогательные файлы, Readme, ...)
......
│   └── laravel10 (в этом каталоге работа с проектом - php artisan ...)
│       (~/projects/laravel10-admin-panel/laravel10$ )
│       └── (файлы проекта)
----------------------------------------------------
	Если вышли с проекта и Docker, то вход такой:
	Запускаем контейнеры в папке с проектом, НЕ в папке проекта (/laravel10)
	/projects/laravel10-admin-panel$ docker-compose up -d	
	
http://localhost:8000/
	В - Log in вводим:
admin@gmail.com
12345678

	перейдет по адресу
http://localhost:8000/home

	в другой вкладке открываем
http://localhost:8000/admin_panel

55. 
Установка пакета elFinder Package for Laravel инструкция

https://github.com/barryvdh/laravel-elfinder


56.
	Installation
	Require this package with Composer

composer require barryvdh/laravel-elfinder

57.

php artisan elfinder:publish

	Published assets to: barryvdh/elfinder

58.

php artisan vendor:publish --provider='Barryvdh\Elfinder\ElfinderServiceProvider' --tag=config

   INFO  Publishing [config] assets.  

  Copying file [vendor/barryvdh/laravel-elfinder/config/elfinder.php] to [config/elfinder.php]  DONE

59.

php artisan vendor:publish --provider='Barryvdh\Elfinder\ElfinderServiceProvider' --tag=views

   INFO  Publishing [views] assets.  

  Copying directory [vendor/barryvdh/laravel-elfinder/resources/views] to [resources/views/vendor/elfinder]  DONE


	!!! Это было в строй документации, сейчас ненужно   
	add the serviceprovider to the providers array in app/config/app.php
	Barryvdh\Elfinder\ElfinderServiceProvider::class


60.

Откройте файл config/elfinder.php и измените его настройки по своему усмотрению. Например, вы можете изменить директорию по умолчанию, задать права доступа и другие параметры.

61.
	файл конфигурации
laravel10/config/elfinder.php

    | The dir where to store the images (relative from public)
    
    'dir' => ['storage'],


62.

===================================================================================================
===================================================================================================
===================================================================================================

Trusted WYSIWYG editor
https://www.tiny.cloud/

Регистрация 
....@gmail.com
......



63.
Интегрируйте TinyMCE
HTML/JS
Реагировать
Vue.js
Угловой
Более
----------------------
TinyMCE HTML/JS: краткое руководство
Приступите к работе менее чем за 5 минут, выполнив следующие простые шаги:

1. Выберите способ установки.
Выберите способ установки и просмотрите одно из кратких руководств:

Установите TinyMCE с помощью Tiny Cloud - самый простой метод
Гибридное развертывание – загружать плагины премиум-класса из Tiny Cloud в самостоятельную установку TinyMCE, более сложную

2. Добавьте фрагмент кода TinyMCE.
Фрагмент кода ниже содержит ваш ключ API и плагины, на которые вы имеете право в своем плане TinyMCE, загруженные из Tiny Cloud


<!-- Place the first <script> tag in your HTML's <head> -->
<script src="https://cdn.tiny.cloud/1/ !!!!!!!!!!!(Ваш код с Trusted WYSIWYG editor типа lw..................a1)!!!!!!!!!!! /tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>

<!-- Place the following <script> and <textarea> tags your HTML's <body> -->
<script>
  tinymce.init({
    selector: 'textarea',
    plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],
    ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
  });
</script>
<textarea>
  Welcome to TinyMCE!
</textarea>

------------------------------
Or setup your own custom TinyMCE installation with your API key:


lw..................a1


------------------------------
Popular config options:
selector
plugins
toolbar
menubar
height
content_css
Read more about TinyMCE config options in the TinyMCE docs.

If you’re not sure what options to configure, copy the snippet into your app so you can start using the editor. You can always change the config options later.

3. You’re ready to use TinyMCE!
At this point, the editor is installed and ready to use in your app.

To retrieve content from TinyMCE, either process the content with a form handler or use the getContent() API method.

To use TinyMCE on domains other than localhost add your domain to the Approved Domains page

===================================================================================================
===================================================================================================
===================================================================================================

64.
<!-- Place the first <script> tag in your HTML's <head> -->
<script src="https://cdn.tiny.cloud/1/lw7e....................a1/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>



65.
	laravel10/resources/views/admin/post/create.blade.php

	добавили выбор required т.к. не может быть поста без категори 
	<select name="cat_id" class="form-control" required>

66.


    <!-- Подключение TinyMCE и его инициализация -->
    <!-- Place the first <script> tag in your HTML's <head> -->
    <script src="https://cdn.tiny.cloud/1/lw7e................................a1/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>


    {{-- задействованный рабочий скрипт по пути laravel10/public/admin/admin.js --}}

    {{-- Конфигурация 1: Подходит для сложных и функционально насыщенных проектов, где важна расширенная функциональность и множество возможностей редактирования. --}}

    {{-- <script>
    tinymce.init({
        selector: '.editor',
        plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
        ],
        ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
    });
    </script> --}}

    {{-- Конфигурация 2: Идеальна для простых проектов, где требуется минималистичный и легкий текстовый редактор с базовыми функциями. --}}
    
    {{-- <script>
        tinymce.init({
            selector: 'textarea.editor',
            plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
            toolbar_mode: 'floating',
        });
    </script> --}}
    
67.
laravel10/config/elfinder.php
 // 'dir' => ['storage'],
    'dir' => ['files'],

68.
создали папку files 
laravel10/public/files

69.
Источник и описание https://github.com/barryvdh/laravel-elfinder?tab=readme-ov-file

Then add the following function (change the elfinder_url to the correct path on your system):

function elFinderBrowser (callback, value, meta) {
    tinymce.activeEditor.windowManager.openUrl({
        title: 'File Manager',
     // url: elfinder_url,
     // url: '/elfinder/tinymce7', <-Это не сработало, делаем как ниже
        url: '/elfinder/tinymce5',

70.
переходим по ссылке 
Standalone Popup Selector
To use elFinder by using a href, button or other element to trigger a popup window, you will need to do the following.

Add support for a popup window, we have used Jacklmoore's jQuery colorbox <--- ссылка

откроет это
https://www.jacklmoore.com/colorbox/

скачиваем
получаем файл colorbox-master.zip
71.
добавляем файл из colorbox-master/example4/colorbox.css
в laravel10/public/admin/dist/css/colorbox.css

из colorbox-master/jquery.colorbox-min.js
в laravel10/public/admin/dist/js/jquery.colorbox-min.js

laravel10/resources/views/layouts/admin_layout.blade.php
 <link href="/admin/dist/css/colorbox.css" rel="stylesheet">

	подключение строк 

<script type="text/javascript" src="/admin/dist/js/jquery.colorbox-min.js"></script>
 
<!-- Подключение TinyMCE и его инициализация -->
<script src="https://cdn.tiny.cloud/1/lw7e...........................a1/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>


72.

	подключем не standalonepopup.min.js а standalonepopup.js
	<script type="text/javascript" src="/packages/barryvdh/elfinder/js/standalonepopup.min.js"></script>

вот так 
<script type="text/javascript" src="/admin/dist/js/jquery.colorbox-min.js"></script>
 
    <!-- Подключение TinyMCE и его инициализация -->
<script src="https://cdn.tiny.cloud/1/lw7e.......................a1/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>

<script type="text/javascript" src="/packages/barryvdh/elfinder/js/standalonepopup.js"></script>
<script src="/admin/admin.js"></script>

73.

	laravel10/resources/views/admin/post/create.blade.php

<div class="form-group">
	<textarea name="text" class="editor"></textarea>
</div>

<div class="form-group">
	<label for="feature_image">Feature Image</label>
	<img src="" alt="" class="img-uploaded">
	<input type="text" class="form-control" id="feature_image" name="feature_image" value="" readonly>
	<a href="" class="popup_selector" data-inputid="feature_image">Select Image</a>
</div>
                               

74.
редактируем файл  laravel10/public/packages/barryvdh/elfinder/js/standalonepopup.js

75.
laravel10/resources/views/layouts/admin_layout.blade.php
выбор картинки заработал при пути /public/packages/barryvdh/elfinder/js/standalonepopup.js
!!!не раб
!!!<script type="text/javascript" src="/packages/barryvdh/elfinder/js/standalonepopup.js"></script> --}}
 
+++ работает
<script type="text/javascript" src="/public/packages/barryvdh/elfinder/js/standalonepopup.js"></script>
    
вернул обратно без /public/ и работает, возможно кэш
<script type="text/javascript" src="/packages/barryvdh/elfinder/js/standalonepopup.js"></script>

76.
laravel10/resources/views/admin/post/create.blade.php
 <input type="text" name="img" class="form-control" id="feature_image" name="feature_image" value="" readonly>


77.
полезные закладки

	ресурс
https://laravel.com/docs/10.x/controllers#restful-partial-resource-routes

	связи
https://laravel.com/docs/10.x/eloquent-relationships

https://laravel.com/docs/10.x/eloquent-relationships#one-to-many

78.
laravel10/resources/views/admin/post/edit.blade.php внимание на 
строку @if ($category->id == $post->cat_id) selected @endif>{{ $category->title }}

@foreach ($categories as $category)
	{{-- id будет записываться в таблицу posts в поле cat_id --}}
	<option value="{{ $category->id }}"
		@if ($category->id == $post->cat_id) selected @endif>{{ $category->title }}
	</option>
@endforeach

---
<div class="form-group">
	<textarea name="text" class="editor">{{ $post->text }}</textarea>
</div>

79.
#8 Разработка админ-панели на Laravel 8. Вывод всех постов и их редактирование. Часть 2
15:00 повторение полей name name value
<input type="text" value="{{ $post->img }}" name="img" class="form-control" id="feature_image" name="feature_image" value="" readonly>


/home/aleksandr/projects/laravel10-admin-panel/laravel10/resources/views/admin/post/create.blade.php
повторение полей name name value
<input type="text" name="img" class="form-control" id="feature_image" name="feature_image" value="" readonly>

80.
laravel10/app/Http/Controllers/Admin/PostController.php

        // $post->img = '/' . $request->img;
        $post->text = $request->text;

81.
laravel10/resources/views/admin/post/index.blade.php

<td>
	@if ($post->category == null)
    	Категория была удалена
	@else
	    {{ $post->category->title }}
	@endif
</td>

82. 
	Для правильного сохранения картинок
laravel10/public/admin/admin.js

tinymce.init({
    selector: '.editor',
    plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
    tinycomments_mode: 'embedded',
------->    relative_urls: false,


83.
переделал на вариант проще

tinymce.init({
    selector: '.editor',
    plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
    toolbar_mode: 'floating',
    relative_urls : false,
    file_picker_callback : elFinderBrowser
});


84.
85.
86.
87.
88.
89.
90.
91.
92.
93.
94.
95.
96.
97.
98.
99.
100.

